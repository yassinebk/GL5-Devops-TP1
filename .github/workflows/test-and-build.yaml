name: Test and Build

on:
  pull_request:
    branches:
      - main # Run the workflow for pull requests to the main branch
  push:
    branches:
      - main # Run the workflow on pushes to the main branch

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed for SonarQube to get all history

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2 # Specify the Go version to use

      # Step 3: Verify Go module dependencies
      - name: Go mod tidy and vendor
        run: |
          go mod tidy
          go mod vendor

      # Step 4: Run tests with coverage
      - name: Run Go tests with coverage
        run: go test ./... -v -coverprofile=coverage.out

      # Step 5: SonarQube Scan
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=${GITHUB_REPOSITORY#*/}
            -Dsonar.sources=.
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.exclusions=**/*_test.go,**/vendor/**

      # Step 6: Build the Go binary
      - name: Build Go binary
        run: go build -o math-cli main.go

      # Step 7: Verify the binary exists
      - name: Check binary exists
        run: test -f math-cli && echo "Binary built successfully."
